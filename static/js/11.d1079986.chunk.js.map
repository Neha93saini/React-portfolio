{"version":3,"sources":["components/projects/TextField1.jsx","components/projects/BookList1.jsx"],"names":["TextField1","_ref","label","props","field","meta","useField","_jsxs","className","children","_jsx","htmlFor","name","concat","touched","error","autoComplete","ErrorMessage","component","BookList1","books","setBooks","useState","edit","setEdit","activeIndex","setActiveIndex","formikEdit","setFormikEdit","validate","Yup","max","required","noOfBooks","min","publisher","MyApp","formik","useFormikContext","values","setFieldValue","React","useEffect","data","Formik","initialValues","validationSchema","onSubmit","actions","book","addList","resetForm","handleSubmit","Form","type","id","map","item","index","i","Math","random","onClick","editList","data1","filter","deleteList"],"mappings":"yHAAA,gCAmBeA,UAhBIC,IAA0B,IAAzB,MAAEC,KAAUC,GAAOF,EACrC,MAAOG,EAAOC,GAAQC,YAASH,GAE/B,OACEI,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACzBC,cAAA,SAAOF,UAAU,OAAOG,QAASP,EAAMQ,KAAKH,SAAEP,IAC9CQ,cAAA,SACEF,UAAS,6BAAAK,OAA+BR,EAAKS,SAAWT,EAAKU,OAAS,kBAClEX,KAAWD,EACfa,aAAa,QAEfN,cAACO,IAAY,CAACC,UAAU,MAAMN,KAAMR,EAAMQ,KAAMJ,UAAU,YACtD,C,kCCfV,4DA0IeW,UArIGA,KAChB,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAAMC,GAAWF,oBAAS,IAC1BG,EAAaC,GAAkBJ,mBAAS,OACxCK,EAAYC,GAAiBN,oBAAS,GACvCO,EAAWC,IAAW,CAC1BlB,KAAMkB,MACHC,IAAI,GAAI,kCACRC,SAAS,qBACZC,UAAWH,MACRI,IAAI,EAAG,yBACPF,SAAS,aACZG,UAAWL,MACRE,SAAS,2BAOd,MAAMI,EAAQA,KACZ,MAAMC,EAASC,cACf,IAAKD,EACH,KAAM,qBAER,MAAM,OAAEE,EAAM,cAAEC,GAAkBH,EAUlC,OATAI,IAAMC,WAAU,KACd,GAAIf,EAAY,CACd,MAAMgB,EAAOvB,EAAMK,GACnBe,EAAc,OAAQG,EAAK/B,MAC3B4B,EAAc,YAAaG,EAAKV,WAChCO,EAAc,YAAaG,EAAKR,WAdpCP,GAAc,EAgBZ,IACC,CAACW,EAAQZ,IACL,EAAE,EA+BX,OACEpB,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAClBC,cAAA,OAAKF,UAAU,WAAUC,SACvBC,cAACkC,IAAM,CACLC,cAAe,CAAEjC,KAAM,GAAIqB,UAAW,GAAIE,UAAW,IACrDW,iBAAkBjB,EAClBkB,SAAUA,CAACR,EAAQS,KAjCVT,KACf,MAAMU,EAAO,CACXrC,KAAM2B,EAAO3B,KACbqB,UAAWM,EAAON,UAClBE,UAAWI,EAAOJ,YAEP,IAATZ,GACFH,EAAMK,GAAewB,EACrB5B,EAAS,IAAID,IACbI,GAAQ,IAGRH,EAAS,IAAID,EAAO6B,GACtB,EAqBQC,CAAQX,GACRS,EAAQG,WAAW,EACnB1C,SAEDR,IAAA,IAAC,aAAEmD,GAAcnD,EAAA,OAChBM,eAAC8C,IAAI,CAACN,SAAUK,EAAa3C,SAAA,CAC3BC,cAACV,UAAU,CAACE,MAAM,OAAOU,KAAK,OAAO0C,KAAK,SAC1C5C,cAACV,UAAU,CAACE,MAAM,cAAcU,KAAK,YAAY0C,KAAK,WACtD5C,cAACV,UAAU,CAACE,MAAM,YAAYU,KAAK,YAAY0C,KAAK,SACpD5C,cAAA,UAAQ6C,GAAG,MAAM/C,UAAU,eAAe8C,KAAK,SAAQ7C,SAAC,QAGxDC,cAAC0B,EAAK,MACD,MAIb1B,cAAA,OAAKF,UAAU,wBAAuBC,SACpCF,eAAA,SAAOC,UAAU,sBAAqBC,SAAA,CACpCC,cAAA,SAAAD,SACEF,eAAA,MAAAE,SAAA,CACEC,cAAA,MAAAD,SAAI,UACJC,cAAA,MAAAD,SAAI,UACJC,cAAA,MAAAD,SAAI,iBACJC,cAAA,MAAAD,SAAI,oBAGRC,cAAA,SAAAD,SAEIW,EAAMoC,KAAI,CAACC,EAAMC,KACf,MAAMC,EAAID,EAAQE,KAAKC,SACvB,OACEtD,eAAA,MAAAE,SAAA,CACEC,cAAA,MAAAD,SAAA,GAAAI,OACM6C,EAAQ,EAAC,OAEfhD,cAAA,MAAAD,SACGgD,EAAK7C,OAERF,cAAA,MAAAD,SACGgD,EAAKxB,YAERvB,cAAA,MAAAD,SACGgD,EAAKtB,YAER5B,eAAA,MAAAE,SAAA,CACEC,cAAA,UAAQF,UAAU,sBAAsB8C,KAAK,SAASQ,QAASA,IAhEjEJ,KAChBhC,EAAegC,GACflC,GAAQ,GACRI,GAAc,EAAK,EA6DoEmC,CAASL,GAAOjD,SAAC,UACtFC,cAAA,UAAQF,UAAU,sBAAsB8C,KAAK,SAASQ,QAASA,IA3D/DJ,KAClB,MAAMM,EAAQ5C,EAAM6C,QAAO,CAACR,EAAME,IAAMA,IAAMD,IAC9CrC,EAAS,IAAI2C,GAAO,EAyDmEE,CAAWR,GAAOjD,SAAC,iBAfnFkD,EAiBJ,aAQb,C","file":"static/js/11.d1079986.chunk.js","sourcesContent":["import React from 'react';\r\nimport { ErrorMessage, useField } from 'formik';\r\n\r\nconst TextField1 = ({ label, ...props }) => { // eslint-disable-line\r\n  const [field, meta] = useField(props); // eslint-disable-line\r\n\r\n  return (\r\n    <div className=\"mb-2 ml-4 \">\r\n      <label className=\"mt-3\" htmlFor={field.name}>{label}</label>\r\n      <input\r\n        className={`form-control shadow-none  ${meta.touched && meta.error && 'is- invalid'}`}\r\n        {...field} {...props} // eslint-disable-line\r\n        autoComplete=\"off\"\r\n      />\r\n      <ErrorMessage component=\"div\" name={field.name} className=\"error\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextField1;\r\n","import React, { useState } from 'react';\r\nimport { Formik, Form, useFormikContext } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport TextField1 from './TextField1';\r\n\r\nconst BookList1 = () => {\r\n  const [books, setBooks] = useState([]);\r\n  const [edit, setEdit] = useState(false);\r\n  const [activeIndex, setActiveIndex] = useState(null);\r\n  const [formikEdit, setFormikEdit] = useState(false);\r\n  const validate = Yup.object({\r\n    name: Yup.string()\r\n      .max(15, ' Must be 15 characters or less')\r\n      .required(' Name is required'),\r\n    noOfBooks: Yup.number()\r\n      .min(3, 'please enter valid no')\r\n      .required(' required'),\r\n    publisher: Yup.string()\r\n      .required('publisher is required'),\r\n  });\r\n\r\n  function setForm() {\r\n    setFormikEdit(false);\r\n  }\r\n\r\n  const MyApp = () => {\r\n    const formik = useFormikContext();\r\n    if (!formik) {\r\n      throw \"Error loading form\"; // eslint-disable-line\r\n    }\r\n    const { values, setFieldValue } = formik;\r\n    React.useEffect(() => {\r\n      if (formikEdit) {\r\n        const data = books[activeIndex];\r\n        setFieldValue('name', data.name);\r\n        setFieldValue('noOfBooks', data.noOfBooks);\r\n        setFieldValue('publisher', data.publisher);\r\n        setForm();\r\n      }\r\n    }, [values, formikEdit]);\r\n    return '';\r\n  };\r\n\r\n  //  for add\r\n  const addList = (values) => {\r\n    const book = {\r\n      name: values.name,\r\n      noOfBooks: values.noOfBooks,\r\n      publisher: values.publisher,\r\n    };\r\n    if (edit === true) {\r\n      books[activeIndex] = book;\r\n      setBooks([...books]);\r\n      setEdit(false);\r\n    } else {\r\n      // if edit is true the n we we do add operations\r\n      setBooks([...books, book]);\r\n    }\r\n  };\r\n\r\n  const editList = (index) => {\r\n    setActiveIndex(index);\r\n    setEdit(true);\r\n    setFormikEdit(true);\r\n  };\r\n\r\n  const deleteList = (index) => {\r\n    const data1 = books.filter((item, i) => i !== index);\r\n    setBooks([...data1]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-6\">\r\n        <Formik\r\n          initialValues={{ name: '', noOfBooks: '', publisher: '' }}\r\n          validationSchema={validate}\r\n          onSubmit={(values, actions) => {\r\n            addList(values);\r\n            actions.resetForm();\r\n          }}\r\n        >\r\n          {({ handleSubmit }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n              <TextField1 label=\"Name\" name=\"name\" type=\"text\" />\r\n              <TextField1 label=\"No Of Books\" name=\"noOfBooks\" type=\"number\" />\r\n              <TextField1 label=\"Publisher\" name=\"publisher\" type=\"text\" />\r\n              <button id=\"btn\" className=\"btn btn-dark\" type=\"submit\">\r\n                ADD\r\n              </button>\r\n              <MyApp />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n      <div className=\"col-sm-6 table-scroll\">\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th> S.No</th>\r\n              <th> Name</th>\r\n              <th> No of books</th>\r\n              <th> Publisher</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              books.map((item, index) => { // eslint-disable-line\r\n                const i = index + Math.random();\r\n                return (\r\n                  <tr key={i}>\r\n                    <td>\r\n                      {`${index + 1}.`}\r\n                    </td>\r\n                    <td>\r\n                      {item.name}\r\n                    </td>\r\n                    <td>\r\n                      {item.noOfBooks}\r\n                    </td>\r\n                    <td>\r\n                      {item.publisher}\r\n                    </td>\r\n                    <td>\r\n                      <button className=\"btn btn-primary m-3\" type=\"button\" onClick={() => editList(index)}> Edit</button>\r\n                      <button className=\"btn btn-primary m-3\" type=\"button\" onClick={() => deleteList(index)}> Delete</button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })  // eslint-disable-line\r\n            }\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default BookList1;\r\n"],"sourceRoot":""}