{"version":3,"sources":["components/Projects.jsx","../node_modules/react-bootstrap/esm/Row.js","components/Header.jsx"],"names":["styles","containerStyle","marginBottom","showMoreStyle","margin","projectStyle","height","width","Projects","props","_data$projects","header","data","setData","useState","useEffect","fetch","endpoints","projects","method","then","res","json","catch","err","_jsxs","_Fragment","children","_jsx","Header","title","className","Container","style","Row","xs","sm","md","lg","slice","map","project","Fade","ProjectCard","FallbackSpinner","React","_ref","ref","bsPrefix","as","Component","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","concat","classes","forEach","brkPoint","propValue","cols","infix","push","classNames","displayName"],"mappings":"yHAAA,4FAWA,MAAMA,EAAS,CACbC,eAAgB,CACdC,aAAc,IAEhBC,cAAe,CACbC,OAAQ,IAEVC,aAAc,CACZC,OAAQ,IACRC,MAAO,MAwDIC,UApDGC,IAAW,IAADC,EAE1B,MAAM,OAAEC,GAAWF,GACZG,EAAMC,GAAWC,mBAAS,MAGjCC,qBAAU,KACRC,MAAMC,IAAUC,SAAU,CACxBC,OAAQ,QAEPC,MAAMC,GAAQA,EAAIC,SAClBF,MAAMC,GAAQR,EAAQQ,KACtBE,OAAOC,GAAQA,GAAI,GACrB,IAGH,OACEC,eAAAC,WAAA,CAAAC,SAAA,CACEC,cAACC,UAAM,CAACC,MAAOnB,IACdC,EAEGgB,cAAA,OAAKG,UAAU,4BAA2BJ,SACxCC,cAACI,IAAS,CAACC,MAAOjC,EAAOC,eAAe0B,SACtCC,cAACM,IAAG,CAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGP,UAAU,MAAKJ,SAChC,QADgCjB,EAC7CE,EAAKM,gBAAQ,IAAAR,OAAA,EAAbA,EAAe6B,MAAM,EATd,GASgCC,KAAKC,GAC3Cb,cAACc,IAAI,CAAqBT,MAAOjC,EAAOK,aAAasB,SACnDC,cAACe,UAAW,CAACF,QAASA,KADbA,EAAQX,eAkBzBF,cAACgB,UAAe,MACrB,C,mCCpEP,yCAMA,MAAMV,EAAmBW,cAAiB,CAAAC,EAMvCC,KAAQ,IANgC,SACzCC,EAAQ,UACRjB,EAEAkB,GAAIC,EAAY,SACbzC,GACJqC,EACC,MAAMK,EAAoBC,YAAmBJ,EAAU,OACjDK,EAAcC,cACdC,EAAgBC,cAChBC,EAAa,GAAHC,OAAMP,EAAiB,SACjCQ,EAAU,GAehB,OAdAN,EAAYO,SAAQC,IAClB,MAAMC,EAAYrD,EAAMoD,GAExB,IAAIE,SADGtD,EAAMoD,GAEI,MAAbC,GAA0C,kBAAdA,IAE5BC,QACED,GAEJC,EAAOD,EAET,MAAME,EAAQH,IAAaN,EAAgB,IAAHG,OAAOG,GAAa,GAChD,MAARE,GAAcJ,EAAQM,KAAK,GAADP,OAAID,GAAUC,OAAGM,EAAK,KAAAN,OAAIK,GAAO,IAE7CnC,cAAKsB,EAAW,CAClCH,IAAKA,KACFtC,EACHsB,UAAWmC,IAAWnC,EAAWoB,KAAsBQ,IACvD,IAEJzB,EAAIiC,YAAc,MACHjC,K,kCCvCf,6BAaeL,UATf,SAAgBpB,GACd,MAAM,MAAEqB,GAAUrB,EAClB,OAAOmB,cAAA,OAAKG,UAAU,SAAQJ,SAAEG,GAClC,C","file":"static/js/9.b794b540.chunk.js","sourcesContent":["// import React, { useState, useEffect, useContext } from 'react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\n// import { ThemeContext } from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Fade from 'react-reveal/Fade';\r\nimport Header from './Header';\r\nimport endpoints from '../constants/endpoints';\r\nimport ProjectCard from './projects/ProjectCard';\r\nimport FallbackSpinner from './FallbackSpinner';\r\n\r\nconst styles = {\r\n  containerStyle: {\r\n    marginBottom: 25,\r\n  },\r\n  showMoreStyle: {\r\n    margin: 25,\r\n  },\r\n  projectStyle: {\r\n    height: 500,\r\n    width: 417,\r\n  },\r\n};\r\n\r\nconst Projects = (props) => {\r\n  // const theme = useContext(ThemeContext);\r\n  const { header } = props;\r\n  const [data, setData] = useState(null);\r\n  // const [showMore, setShowMore] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(endpoints.projects, {\r\n      method: 'GET',\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => setData(res))\r\n      .catch((err) => err);\r\n  }, []);\r\n  // const numberOfItems = showMore && data ? data.length : 6;\r\n  const numberOfItems = 6;\r\n  return (\r\n    <>\r\n      <Header title={header} />\r\n      {data\r\n        ? (\r\n          <div className=\"section-content-container\">\r\n            <Container style={styles.containerStyle}>\r\n              <Row xs={1} sm={1} md={2} lg={3} className=\"g-4\">\r\n                {data.projects?.slice(0, numberOfItems).map((project) => (\r\n                  <Fade key={project.title} style={styles.projectStyle}>\r\n                    <ProjectCard project={project} />\r\n                  </Fade>\r\n                ))}\r\n              </Row>\r\n\r\n              {/* {!showMore\r\n                && (\r\n                  <Button\r\n                    style={styles.showMoreStyle}\r\n                    variant={theme.bsSecondaryVariant}\r\n                    onClick={() => setShowMore(true)}\r\n                  >\r\n                    show more\r\n                  </Button>\r\n                )} */}\r\n            </Container>\r\n          </div>\r\n        ) : <FallbackSpinner />}\r\n    </>\r\n  );\r\n};\r\n\r\nProjects.propTypes = {\r\n  header: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Projects;\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../App.css';\r\n\r\nfunction Header(props) {\r\n  const { title } = props;\r\n  return <div className=\"header\">{title}</div>;\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n"],"sourceRoot":""}